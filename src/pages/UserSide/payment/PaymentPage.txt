import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { useSelector } from 'react-redux';
import { userAxiosApi, therapistsAxiosApi } from '../../../config/axiosConfig';
import { PAYMENT_API } from '../../../constants';
import { popupToast } from '../../../utils/AlertUtils';
import Navbar from '../../../components/UserComponents/navbar/Navbar';
import Footer from '../../../components/CommonComponents/footer/Footer';
import { Toaster } from 'react-hot-toast';
import Razorpay from 'razorpay';
// import useRazorpay from "react-razorpay";

const PaymentPage = () => {
  const { therapistId } = useParams();
  const { isLoggedIn } = useSelector((state) => state.auth);
  const [bookingResult, setBookingResult] = useState(null);
  const navigate = useNavigate();
  // const [Razorpay] = useRazorpay();

  // UseEffect to load the booking details (you can adjust this based on your data structure)
  useEffect(() => {
    if (!isLoggedIn) {
      popupToast('error', 'Please log in to proceed with the payment.', 2000);
      navigate('/login'); // Redirect the user to the login page
      return;
    }

    // Fetch the booking details using the therapistId (adjust the URL as needed)
    userAxiosApi
      .get(PAYMENT_API + '/booking/' + therapistId)
      .then((response) => {
        setBookingResult(response.data);
      })
      .catch((error) => {
        popupToast('error', 'Error fetching booking details.', 2000);
        navigate('/'); // Redirect to the homepage or an error page
      });
  }, [therapistId, isLoggedIn, navigate]);

  // Handle the payment process when the user clicks the "Pay Now" button
  const handlePayment = async () => {
    try {
      // Call the payment service to process the payment (adjust as needed)
      const response = await PaymentService.processPayment(bookingResult);

      // Handle the payment success
      popupToast('success', 'Payment successful!', 2000);

      // Redirect to a success or confirmation page
      navigate('/payment-success');
    } catch (error) {
      // Handle the payment failure
      popupToast('error', 'Payment failed. Please try again.', 2000);
    }
  };

  const createTransaction = async (amount)=> {
    therapistsAxiosApi.get(PAYMENT_API + `/createTransaction/${amount}`).then((response) => {
      console.log(response.data);
      console.log("===  -----   ===");
      setTherapist(response.data);
      dispatch(bookActions.setTherapistData(response.data));
    });
  }

  return (
    <>
      <Navbar />
      <div className="container mx-auto p-4">
        <h1 className="text-3xl font-semibold text-center my-8 dark:text-white font-orbitron">Payment</h1>

        {bookingResult ? (
          <div className="bg-gradient-to-r from-cyan-50 to-blue-50 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-50 dark:focus:ring-cyan-800 font-roboto">
            {/* Display booking details here (adjust as needed) */}
            <p>Booking ID: {bookingResult.bookingId}</p>
            <p>Appointment Date and Time: {bookingResult.appointmentDateTime}</p>
            {/* Add more booking details here */}
            <button
              onClick={handlePayment}
              className="text-white bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-green-300 dark:focus:ring-green-800 shadow-lg shadow-green-500/50 dark:shadow-lg dark:shadow-green-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
            >
              Pay Now
            </button>
          </div>
        ) : (
          <div className="bg-gradient-to-r from-teal-50 to-lime-50 hover:bg-gradient-to-l hover:from-teal-50 hover:to-lime-50 focus:ring-4 focus:outline-none focus:ring-lime-50 dark:focus:ring-teal-700 text-center font-bold font-roboto text-[25px] text-gray-500">
            Loading booking details...
          </div>
        )}
      </div>
      <Toaster />
      <Footer />
    </>
  );
};

export default PaymentPage;
